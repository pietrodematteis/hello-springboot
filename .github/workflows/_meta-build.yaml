on:
  workflow_call:
    inputs:
      app-version:
        type: string
        required: false
        default: "snapshot"
        description: "the version that should be set/used as tag for the container image"
      publish-container:
        type: boolean
        required: false
        default: false
        description: "publish and scan the container image once its built"
      ref-name:
        type: string
        required: true
        description: "Short ref name of the branch or tag that triggered the workflow run"
      src_type:
        description: 'Project Type (java, python, dotnet) see https://cyclonedx.github.io/cdxgen/#/PROJECT_TYPES'
        type: string
        required: false
        default: 'java'
      src_profile:
        description: BOM profile to use for generation. Default generic.
        type: string
        required: false
        default: 'generic'
      artifact_name:
        description: 'Name to use for the artifact'
        type: string
        required: true
    secrets:
      registry-0-usr:
        required: true
      registry-0-psw:
        required: true

permissions: { }

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # tag=v4.7.1
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Override project version with info camimg from tag
        run: mvn versions:set -DnewVersion=${{ inputs.app-version }}
        
      - name: Generate SBOM using cdxgen container, IMPORTANT to select the image that best matches with the context
        run: |
          docker run --rm \
            -v $(pwd):/app:rw \
            -v /tmp:/tmp \
            -t ghcr.io/cyclonedx/cdxgen:v11.4.3@sha256:a7f032771f4937468dc288f8e94d292e84fb4f698bbd8b0c3a059838bb481277 \
            -r /app -o /tmp/bom.json -t ${{ inputs.src_type }} \
            --profile ${{ inputs.src_profile }} --json-pretty

      - name: Build with Maven
        run: |-
          mvn -B package 
      
      - name: Copy SBOM into target folder
        run: cp /tmp/bom.json  $(pwd)/target/bom.json
      
      - name: Generate SHA256 checksums
        run: |
          cd target
          for file in *.jar bom.json; do
            sha256sum "$file" > "$file.sha256"
          done
    
      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # tag=v4.6.2
        with:
          name: ${{ inputs.artifact_name }}
          path: |-
            target/*.jar
            target/bom.json
            target/*.sha256
 
  build-container:
    runs-on: ubuntu-latest
    #permissions:
    #  security-events: write # Required to upload trivy's SARIF output
    needs:
      - build-java
    if: ${{ inputs.publish-container }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2

      - name: Download Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # tag=v4.3.0
        with:
          name: ${{ inputs.artifact_name }}
          path: target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # tag=v3.11.1
        id: buildx
        with:
          install: true

      - name: Login to Docker.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # tag=v3.4.0
        if: ${{ inputs.publish-container }}
        with:
          registry: docker.io
          username: ${{ secrets.registry-0-usr }}
          password: ${{ secrets.registry-0-psw }}

      - name: Set Container Tags
        id: tags
        run: |-
          IMAGE_NAME="docker.io/dependencytrack/${{ matrix.distribution }}"
          REF_NAME="${{ inputs.ref-name }}"
          TAGS=""
          TAGS_ALPINE=""
          
          if [[ $REF_NAME == feature-* ]]; then
            TAGS="${IMAGE_NAME}:${REF_NAME,,}"
            TAGS_ALPINE="${IMAGE_NAME}:${REF_NAME,,}-alpine"
          else
            TAGS="${IMAGE_NAME}:${{ inputs.app-version }}"
            TAGS_ALPINE="${IMAGE_NAME}:${{ inputs.app-version }}-alpine"
            if [[ "${{ inputs.app-version }}" != "snapshot" ]]; then
              TAGS="${TAGS},${IMAGE_NAME}:latest"
              TAGS_ALPINE="${TAGS_ALPINE},${IMAGE_NAME}:latest-alpine"
            fi
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "tags-alpine=${TAGS_ALPINE}" >> $GITHUB_OUTPUT

      - name: Run Trivy Vulnerability Scanner
        if: ${{ inputs.publish-container }}
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # tag=0.31.0
        env:
          # https://github.com/aquasecurity/trivy-action/issues/389
          TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db:2"
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
        with:
          image-ref: docker.io/dependencytrack/${{ matrix.distribution }}:${{ inputs.app-version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        if: ${{ inputs.publish-container }}
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # tag=v3.29.2
        with:
          sarif_file: 'trivy-results.sarif'
