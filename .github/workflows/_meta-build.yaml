on:
  workflow_call:
    inputs:
      app-version:
        type: string
        required: false
        default: "snapshot"
        description: "the version that should be set/used as tag for the container image"
      publish-container:
        type: boolean
        required: false
        default: false
        description: "publish and scan the container image once its built"
      ref-name:
        type: string
        required: true
        description: "Short ref name of the branch or tag that triggered the workflow run"
      src_type:
        description: 'Project Type (java, python, dotnet) see https://cyclonedx.github.io/cdxgen/#/PROJECT_TYPES'
        type: string
        required: false
        default: 'java'
      src_profile:
        description: BOM profile to use for generation. Default generic.
        type: string
        required: false
        default: 'generic'
      artifact_name:
        description: 'Name to use for the artifact'
        type: string
        required: true
    secrets:
      registry-0-usr:
        required: true
      registry-0-psw:
        required: true

permissions: { }

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # tag=v4.7.1
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Override project version with info camimg from tag
        run: mvn versions:set -DnewVersion=${{ inputs.app-version }}
        
      - name: Generate SBOM using cdxgen container, IMPORTANT to select the image that best matches with the context
        run: |
          docker run --rm \
            -v $(pwd):/app:rw \
            -v /tmp:/tmp \
            -t ghcr.io/cyclonedx/cdxgen:v11.4.3@sha256:a7f032771f4937468dc288f8e94d292e84fb4f698bbd8b0c3a059838bb481277 \
            -r /app -o /tmp/bom.json -t ${{ inputs.src_type }} \
            --profile ${{ inputs.src_profile }} --json-pretty

      - name: Build with Maven
        run: |-
          mvn -B package 
      
      - name: Copy SBOM into target folder
        run: cp /tmp/bom.json  $(pwd)/target/bom.json
      
      - name: Generate SHA256 checksums
        run: |
          cd target
          for file in *.jar bom.json; do
            sha256sum "$file" > "$file.sha256"
          done
    
      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # tag=v4.6.2
        with:
          name: ${{ inputs.artifact_name }}
          path: |-
            target/*.jar
            target/bom.json
            target/*.sha256
 
